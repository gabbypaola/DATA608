library(shinythemes)
library(rsconnect)
library(sf)
library(ggplot2)
library(gghighlight)
df <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv")
names(df) <- lapply(names(df), tolower)
str(df)
unique(df$icd.chapter)
#df$ICD.Chapter <- as.factor(df$ICD.Chapter)
df %>% filter(year == 2010 &
icd.chapter == 'Mental and behavioural disorders') %>%
arrange(desc(crude.rate)) %>%
top_n(10) %>%
ggplot(aes(x=reorder(state, crude.rate), y=crude.rate))+
geom_col(fill='#f69697') +
coord_flip() +
geom_text(aes(label=crude.rate), size = 2, hjust = -0.1)+
labs(title = "Cause of Death: Mental and behavioural disorders",
subtitle = "Crude Death Rate Across the US in 2010",
x= "State",
y = "Crude Rate") +
theme_minimal()
natl_avg <- df %>%
group_by(icd.chapter, year) %>%
mutate(crude.rate= round((sum(deaths) / sum(population)) * 100000, 1)) %>%
mutate(state= "US") %>%
select(icd.chapter, state, year, crude.rate) %>%
distinct(icd.chapter, year, .keep_all = TRUE) %>%
ungroup()
#natl_avg
df_avg <- df %>%
select(icd.chapter,state,year,crude.rate) %>%
rbind(natl_avg)
# sanity check
# df_avg %>%
#   filter(state == "US")
#plots all states vs. US w/ cause as Mental and behavioural disorders
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders')
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7) +
gghighlight(state=="US", label_params = list(size = 5),
unhighlighted_params = list(colour="darkgray",
alpha = 0.6,
size=.6))+
theme_minimal()
#state==c("US","NJ") state == 'NJ' | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders' , state == 'US', (state %in% c('NJ','NY','MA')) )
# df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
#             state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7) +
gghighlight(state=="US", label_params = list(size = 5),
unhighlighted_params = list(colour="darkgray",
alpha = 0.6,
size=.6)) +
theme_minimal()
# +geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
#state==c("US","NJ") state == 'NJ' | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders',  (state %in% c('NJ','NY','MA')) )
# df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
#             state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7) +
gghighlight(state=="US", label_params = list(size = 5),
unhighlighted_params = list(colour="darkgray",
alpha = 0.6,
size=.6)) +
theme_minimal()
# +geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
#state==c("US","NJ")  | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
# , label_params = list(size = 5),
#               unhighlighted_params = list(colour="darkgray",
#                                           alpha = 0.6,
#                                           size=.6))
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'NJ', (state %in% c('NJ','NY','MA')) )
# df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
#             state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7) +
gghighlight(state=="US")+
theme_minimal()
# +geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
#plots all states vs. US w/ cause as Mental and behavioural disorders
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders')
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7) +
gghighlight(state=="US", label_params = list(size = 5),
unhighlighted_params = list(colour="darkgray",
alpha = 0.6,
size=.6))+
theme_minimal()
#state==c("US","NJ")  | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
# , label_params = list(size = 5),
#               unhighlighted_params = list(colour="darkgray",
#                                           alpha = 0.6,
#                                           size=.6))
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'NJ' | state %in% c('NJ','NY','MA')) )
#state==c("US","NJ")  | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
# , label_params = list(size = 5),
#               unhighlighted_params = list(colour="darkgray",
#                                           alpha = 0.6,
#                                           size=.6))
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'NJ' | state %in% c('NJ','NY','MA') )
# df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
#             state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7) +
gghighlight(state=="US")+
theme_minimal()
# +geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
#state==c("US","NJ")  | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
# , label_params = list(size = 5),
#               unhighlighted_params = list(colour="darkgray",
#                                           alpha = 0.6,
#                                           size=.6))
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'NJ' | state %in% c('NJ','NY','MA') )
# df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
#             state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)
# +geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
#state==c("US","NJ")  | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
# , label_params = list(size = 5),
#               unhighlighted_params = list(colour="darkgray",
#                                           alpha = 0.6,
#                                           size=.6))
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'NJ' & state %in% c('NJ','NY','MA') )
# df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
#             state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)
# +geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
#state==c("US","NJ")  | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
# , label_params = list(size = 5),
#               unhighlighted_params = list(colour="darkgray",
#                                           alpha = 0.6,
#                                           size=.6))
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'US' | state %in% c('NJ','NY','MA') )
# df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
#             state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)
# +geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
#state==c("US","NJ")  | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
# , label_params = list(size = 5),
#               unhighlighted_params = list(colour="darkgray",
#                                           alpha = 0.6,
#                                           size=.6))
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'US',  state %in% c('NJ','NY','MA') )
# df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
#             state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)
# +geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
#state==c("US","NJ")  | state == 'US'
#US will stay constant, the other state will be user input give user to select multiple
# , label_params = list(size = 5),
#               unhighlighted_params = list(colour="darkgray",
#                                           alpha = 0.6,
#                                           size=.6))
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'US' | state %in% c('NJ','NY','MA') )
# df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
#             state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
gghighlight(state=="US", label_params = list(size = 5),
unhighlighted_params = list(colour="darkgray",
alpha = 0.6,
size=.6))+
theme_minimal()
# +geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, State, NA),
state = as.character(state))
df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2009, state, NA),
state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
gghighlight(state=="US", label_params = list(size = 5),
unhighlighted_params = list(colour="darkgray",
alpha = 0.6,
size=.6))+
theme_minimal() + geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
theme_minimal() + geom_label(aes(label = Label), nudge_x = 0.35, size = 4)
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
theme_minimal() + geom_label(aes(label = Label), nudge_x = 0.35, size = 2)
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
theme_minimal() + geom_label(aes(label = Label), nudge_x = 0.35, size = 3)
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
geom_label(aes(label = Label), nudge_x = 0.35, size = 3) +
theme_minimal() +
gghighlight(state=="US", label_params = list(size = 5),
unhighlighted_params = list(colour="darkgray",
alpha = 0.6,
size=.6))
df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2010, state, NA),
state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
geom_label(aes(label = Label), nudge_x = 0.35, size = 3) +
theme_minimal()
df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2010 & state == 'US', state, NA),
state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
geom_label(aes(label = Label), nudge_x = 0.35, size = 3) +
theme_minimal()
df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2010 & state =! 'US', state, NA),
df_avg_plot <- mutate(df_avg_plot, Label = ifelse(year == 2010 & state != 'US', state, NA),
state = as.character(state))
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
geom_label(aes(label = Label), nudge_x = 0.35, size = 3) +
theme_minimal()
df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7)+
theme_minimal()
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'US' | state %in% c('NJ','NY','MA') )
p <- df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7) +
theme_minimal()
ggplotly(p) %>% hide_legend()
df_avg_plot <- df_avg %>%
filter(icd.chapter == 'Mental and behavioural disorders', state == 'US' | state %in% c('NJ','NY','MA') )
p <- df_avg_plot %>%
ggplot(aes(year, crude.rate), color=state) +
geom_line(aes(year, crude.rate, color = state), size=.7) +
theme_minimal()
ggplotly(p)
# %>% hide_legend()
shiny::runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
typeof(input$cause)
runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
# remove.packages("rlang")
# install.packages("rlang")
#install.packages("gghighlight")
library(dplyr)
library(leaflet)
library(tigris)
library(plotly)
library(shiny)
library(shinythemes)
library(rsconnect)
library(sf)
library(ggplot2)
library(gghighlight)
rsconnect::setAccountInfo(name='gabbypaola',
token='6C8C97C7673C3F08BCAB0D6A30D000C1',
secret='HOYwFQGj+q4L7lMHPHLuS7n+39AMR48ewVLrRpbh')
df <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv")
names(df) <- lapply(names(df), tolower)
str(df)
str(df)
unique(df$icd.chapter)
#df$ICD.Chapter <- as.factor(df$ICD.Chapter)
natl_avg <- df %>%
group_by(icd.chapter, year) %>%
mutate(crude.rate= round((sum(deaths) / sum(population)) * 100000, 1)) %>%
mutate(state= "US") %>%
select(icd.chapter, state, year, crude.rate) %>%
distinct(icd.chapter, year, .keep_all = TRUE) %>%
ungroup()
#natl_avg
# remove.packages("rlang")
# install.packages("rlang")
#install.packages("gghighlight")
library(dplyr)
library(leaflet)
library(tigris)
library(plotly)
library(shiny)
library(shinythemes)
library(rsconnect)
library(sf)
library(ggplot2)
library(gghighlight)
df <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv")
names(df) <- lapply(names(df), tolower)
str(df)
str(df)
unique(df$icd.chapter)
#df$ICD.Chapter <- as.factor(df$ICD.Chapter)
natl_avg <- df %>%
group_by(icd.chapter, year) %>%
mutate(crude.rate= round((sum(deaths) / sum(population)) * 100000, 1)) %>%
mutate(state= "US") %>%
select(icd.chapter, state, year, crude.rate) %>%
distinct(icd.chapter, year, .keep_all = TRUE) %>%
ungroup()
#natl_avg
library(dplyr)
library(leaflet)
library(tigris)
library(plotly)
library(shiny)
library(shinythemes)
library(rsconnect)
library(sf)
library(ggplot2)
library(gghighlight)
df <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv")
names(df) <- lapply(names(df), tolower)
natl_avg <- df %>%
group_by(icd.chapter, year) %>%
mutate(crude.rate= round((sum(deaths) / sum(population)) * 100000, 1)) %>%
mutate(state= "US") %>%
select(icd.chapter, state, year, crude.rate) %>%
distinct(icd.chapter, year, .keep_all = TRUE) %>%
ungroup()
#natl_avg
natl_avg2 <- df %>%
group_by(icd.chapter, year) %>%
mutate(crude.rate= round((sum(deaths) / sum(population)) * 100000, 1)) %>%
mutate(state= "US") %>%
select(icd.chapter, state, year, crude.rate)
View(natl_avg2)
View(natl_avg)
runApp('CUNY SPS/DATA_608/DATA608/Module3/DATA608Module3')
reticulate::repl_python()
soql_1 = ('https://data.cityofnewyork.us/resource/nwxe-4ae8.json?' +\
y
reticulate::repl_python()
'$select=spc_common,boroname,health,count(spc_common)' +\
reticulate::repl_python()
import numpy as np
import numpy as np
library(readxl)
library(readr)
library(rvest)
install.packages(c("Amelia", "BiocManager", "bit", "bookdown", "bslib", "callr", "car", "cli", "commonmark", "CORElearn", "cpp11", "Cubist", "curl", "cvms", "data.table", "datawizard", "DescTools", "dials", "digest", "DT", "e1071", "evaluate", "fontawesome", "forecast", "fracdiff", "future", "future.apply", "geojsonio", "gghighlight", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gld", "globals", "Hmisc", "htmltools", "insight", "installr", "isoband", "jsonify", "jsonlite", "knitr", "lava", "lifecycle", "lme4", "lubridate", "maptools", "markdown", "Matrix", "matrixStats", "mice", "minqa", "mnormt", "modelr", "openssl", "openxlsx", "parameters", "parsnip", "party", "pbapply", "pkgload", "plotly", "plyr", "polyclip", "processx", "protolite", "ps", "purrr", "RcppAnnoy", "RcppArmadillo", "RcppEigen", "RCurl", "recipes", "rgdal", "rmarkdown", "rsconnect", "rstatix", "s2", "sass", "seriation", "sf", "shiny", "slider", "sp", "stringi", "sys", "terra", "testthat", "tibbletime", "tidyselect", "timetk", "tm", "tseries", "tsfeatures", "tsibble", "tune", "usmap", "V8", "vctrs", "wk", "workflows", "xfun", "xts", "yaml", "zip"))
install.packages(c("Amelia", "BiocManager", "bit", "bookdown", "bslib", "callr", "car", "cli", "commonmark", "CORElearn", "cpp11", "Cubist", "curl", "cvms", "data.table", "datawizard", "DescTools", "dials", "digest", "DT", "e1071", "evaluate", "fontawesome", "forecast", "fracdiff", "future", "future.apply", "geojsonio", "gghighlight", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gld", "globals", "Hmisc", "htmltools", "insight", "installr", "isoband", "jsonify", "jsonlite", "knitr", "lava", "lifecycle", "lme4", "lubridate", "maptools", "markdown", "Matrix", "matrixStats", "mice", "minqa", "mnormt", "modelr", "openssl", "openxlsx", "parameters", "parsnip", "party", "pbapply", "pkgload", "plotly", "plyr", "polyclip", "processx", "protolite", "ps", "purrr", "RcppAnnoy", "RcppArmadillo", "RcppEigen", "RCurl", "recipes", "rgdal", "rmarkdown", "rsconnect", "rstatix", "s2", "sass", "seriation", "sf", "shiny", "slider", "sp", "stringi", "sys", "terra", "testthat", "tibbletime", "tidyselect", "timetk", "tm", "tseries", "tsfeatures", "tsibble", "tune", "usmap", "V8", "vctrs", "wk", "workflows", "xfun", "xts", "yaml", "zip"))
install.packages(c("Amelia", "BiocManager", "bit", "bookdown", "bslib", "callr", "car", "cli", "commonmark", "CORElearn", "cpp11", "Cubist", "curl", "cvms", "data.table", "datawizard", "DescTools", "dials", "digest", "DT", "e1071", "evaluate", "fontawesome", "forecast", "fracdiff", "future", "future.apply", "geojsonio", "gghighlight", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "gld", "globals", "Hmisc", "htmltools", "insight", "installr", "isoband", "jsonify", "jsonlite", "knitr", "lava", "lifecycle", "lme4", "lubridate", "maptools", "markdown", "Matrix", "matrixStats", "mice", "minqa", "mnormt", "modelr", "openssl", "openxlsx", "parameters", "parsnip", "party", "pbapply", "pkgload", "plotly", "plyr", "polyclip", "processx", "protolite", "ps", "purrr", "RcppAnnoy", "RcppArmadillo", "RcppEigen", "RCurl", "recipes", "rgdal", "rmarkdown", "rsconnect", "rstatix", "s2", "sass", "seriation", "sf", "shiny", "slider", "sp", "stringi", "sys", "terra", "testthat", "tibbletime", "tidyselect", "timetk", "tm", "tseries", "tsfeatures", "tsibble", "tune", "usmap", "V8", "vctrs", "wk", "workflows", "xfun", "xts", "yaml", "zip"))
install.packages("textreadr")
library(dplyr)
library(readxl)
library(readr)
library(rvest)
library(dplyr)
read_html("https://www.bls.gov/lau/lastrk19.htm")
unemp_19 <- read_html("https://www.bls.gov/lau/lastrk19.htm")
View(unemp_19)
tables = unemp_19 %&gt;% html_table()
unemp_19 <- read_html("https://www.bls.gov/lau/lastrk19.htm"[[2]])
unemp_19 <- read_html("https://www.bls.gov/lau/lastrk19.htm"[[1]])
View(unemp_19)
View(unemp_19)
unemp_19 <- html_table(read_html("https://www.bls.gov/lau/lastrk19.htm"[[1]]))
View(unemp_19)
as.data.frame(unemp_19)
unemp_19_df <- as.data.frame(unemp_19)
View(unemp_19_df)
unemp_19 <- as.data.frame(html_table(read_html("https://www.bls.gov/lau/lastrk19.htm"[[1]])))
unemp_20 <- as.data.frame(html_table(read_html("https://www.bls.gov/lau/lastrk20.htm"[[1]])))
View(unemp_20)
#2015 & 2016
unemp_15 <- as.data.frame(html_table(read_html("https://www.bls.gov/lau/lastrk15.htm"[[1]])))
unemp_15 <- as.data.frame(html_table(read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[[1]])))
unemp_16 <- as.data.frame(html_table(read_html("https://www.bls.gov/lau/lastrk16.htm"[[1]])))
read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[[1]])
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[[1]])
View(unemp_2015)
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[[2]])
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[1])
View(unemp_2015)
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[[[1]]])
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[[2]])
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[[1]])
View(unemp_2015)
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[2])
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[2])
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[2])
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[2],1)
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[1],1)
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[[1]],1)
unemp_2015 <- read_html("https://web.archive.org/web/20160309035527/https://www.bls.gov/lau/lastrk15.htm"[[1]])
View(unemp_2015)
setwd("~/CUNY SPS/DATA_608/DATA608/Final Project")
install.packages(c("Amelia", "cli", "cvms", "data.table", "digest", "forecast", "glmnet", "gtools", "htmltools", "insight", "jpeg", "latex2exp", "mice", "mnormt", "padr", "png", "raster", "rearrr", "sass", "stringi", "terra", "vctrs", "xfun"))
install.packages(c("Amelia", "cli", "cvms", "data.table", "digest", "forecast", "glmnet", "gtools", "htmltools", "insight", "jpeg", "latex2exp", "mice", "mnormt", "padr", "png", "raster", "rearrr", "sass", "stringi", "terra", "vctrs", "xfun"))
install.packages(c("Amelia", "cli", "cvms", "data.table", "digest", "forecast", "glmnet", "gtools", "htmltools", "insight", "jpeg", "latex2exp", "mice", "mnormt", "padr", "png", "raster", "rearrr", "sass", "stringi", "terra", "vctrs", "xfun"))
library(readxl)
library(readr)
library(rvest)
library(dplyr)
benefits15<-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project")
benefits15<-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnempBenefits2015.csv")
View(benefits15)
benefits16 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnempBenefits2016.csv")
View(benefits16)
benefits19 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnempBenefits2019.csv")
benefits20 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnempBenefits2020.csv")
View(benefits15)
View(benefits16)
View(benefits19)
View(benefits20)
#load unemployment rate data
rates15 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnemploymentRates2015.csv")
rates16 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnemploymentRates2016.csv")
rates19 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnemploymentRates2019.csv")
rates20<-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnemploymentRates2020.csv")
View(rates15)
View(benefits16)
View(benefits15)
View(benefits16)
View(benefits19)
View(benefits20)
View(benefits15)
colnames(benefits15)
benefits15 <- benefits15 %>% select("State", "X2014.2015.Max.Weekly.Amt", "Year")
colnames(benefits16)
colnames(benefits19)
colnames(benefits20)
benefits15 <- benefits15 %>% select("State", "X2014.2015.Max.Weekly.Amt", "Year")
benefits16 <- benefits16 %>% select("State", "Max..Weekly.Benefit.Amount", "Year")
benefits19 <- benefits19 %>% select("State", "Max..Weekly.Benefit.Amount", "Year")
benefits20 <- benefits20 %>% select("State", "Max..Weekly.Benefit.Amount", "Year")
colnames(benefits15)[2] <- "Max..Weekly.Benefit.Amount"
View(benefits15)
View(rates15)
#load election data
election16 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\Election16.csv")
#load election data
election16 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\Election2016.csv")
election20 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\Election2020.csv")
benefits15["Election Year"] <- "Pre Election Year"
View(benefits15)
benefits15["Election Year"] <- "No"
View(benefits15)
colnames(benefits15)[2] <- "Max..Weekly.Benefit.Amount"
benefits <- rbind(benefits15, benefits16, benefits19, benefits20)
View(benefits15)
benefits15 <- benefits15 %>% select("State", "X2014.2015.Max.Weekly.Amt", "Year")
#load unemployment benefits data
benefits15 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnempBenefits2015.csv")
benefits16 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnempBenefits2016.csv")
benefits19 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnempBenefits2019.csv")
benefits20 <-read.csv("C:\\Users\\gabri\\OneDrive\\Documents\\CUNY SPS\\DATA_608\\DATA608\\Final Project\\UnempBenefits2020.csv")
benefits15 <- benefits15 %>% select("State", "X2014.2015.Max.Weekly.Amt", "Year")
benefits16 <- benefits16 %>% select("State", "Max..Weekly.Benefit.Amount", "Year")
benefits19 <- benefits19 %>% select("State", "Max..Weekly.Benefit.Amount", "Year")
benefits20 <- benefits20 %>% select("State", "Max..Weekly.Benefit.Amount", "Year")
colnames(benefits15)[2] <- "Max..Weekly.Benefit.Amount"
benefits <- rbind(benefits15, benefits16, benefits19, benefits20)
View(benefits)
View(rates15)
View(rates16)
View(rates19)
View(rates20)
rates <- rbind(rates15,rates16,rates19,rates20)
View(election16)
View(election16)
View(rates16)
View(rates15)
View(benefits)
View(rates)
View(election16)
View(election20)
